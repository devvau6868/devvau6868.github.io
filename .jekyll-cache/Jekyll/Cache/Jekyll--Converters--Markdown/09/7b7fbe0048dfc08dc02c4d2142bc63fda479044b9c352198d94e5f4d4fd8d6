I"Â <ul id="my_toc" class="inline_toc">
  <li><a href="#1-whats-the-difference-between-undefined-and-null">1. What‚Äôs the difference between undefined and null?.</a></li>
  <li><a href="#2-what-does-the--operator-do">2. What does the &amp;&amp; operator do?</a></li>
  <li><a href="#3-what-does-the--operator-do">3. What does the || operator do?</a></li>
  <li><a href="#4-is-using-the--or-unary-plus-operator-the-fastest-way-in-converting-a-string-to-a-number">4. Is using the + or unary plus operator the fastest way in converting a string to a number?</a></li>
  <li><a href="#5-what-is-the-dom">5. What is the DOM?</a></li>
  <li><a href="#6-what-is-event-propagation">6. What is Event Propagation?</a></li>
  <li><a href="#7-whats-event-bubbling">7. What‚Äôs Event Bubbling?</a></li>
  <li><a href="#8-whats-event-capturing">8. What‚Äôs Event Capturing?</a></li>
  <li><a href="#9-whats-the-difference-between-eventpreventdefault-and-eventstoppropagation-methods">9. What‚Äôs the difference between event.preventDefault() and event.stopPropagation() methods?</a></li>
  <li><a href="#10-how-to-know-if-the-eventpreventdefault-method-was-used-in-an-element">10. How to know if the event.preventDefault() method was used in an element?</a></li>
  <li><a href="#11-why-does-this-code-objsomepropx-throw-an-error">11. Why does this code obj.someprop.x throw an error?</a></li>
  <li><a href="#12-what-is-eventtarget-">12. What is event.target ?</a></li>
  <li><a href="#13-what-is-eventcurrenttarget">13. What is event.currentTarget?</a></li>
  <li><a href="#14-whats-the-difference-between--and--">14. What‚Äôs the difference between == and === ?</a></li>
  <li><a href="#15-why-does-it-return-false-when-comparing-two-similar-objects-in-javascript">15. Why does it return false when comparing two similar objects in JavaScript?</a></li>
  <li><a href="#16-what-does-the--operator-do">16. What does the !! operator do?</a></li>
  <li><a href="#17-how-to-evaluate-multiple-expressions-in-one-line">17. How to evaluate multiple expressions in one line?</a></li>
  <li><a href="#18-what-is-hoisting">18. What is Hoisting?</a></li>
  <li><a href="#19-what-is-scope">19. What is Scope?</a></li>
  <li><a href="#20-what-are-closures">20. What are Closures?</a></li>
  <li><a href="#21-what-are-the-falsy-values-in-javascript">21. What are the falsy values in JavaScript?</a></li>
  <li><a href="#22-how-to-check-if-a-value-is-falsy">22. How to check if a value is falsy?</a></li>
  <li><a href="#23-what-does-use-strict-do">23. What does ‚Äúuse strict‚Äù do?</a></li>
  <li><a href="#24-whats-the-value-of-this-in-javascript">24. What‚Äôs the value of this in JavaScript?</a></li>
  <li><a href="#25-what-is-the-prototype-of-an-object">25. What is the prototype of an object?</a></li>
  <li><a href="#26-what-is-an-iife-what-is-the-use-of-it">26. What is an IIFE, what is the use of it?</a></li>
  <li><a href="#27-what-is-the-use-functionprototypeapply-method">27. What is the use Function.prototype.apply method?</a></li>
  <li><a href="#28-what-is-the-use-functionprototypecall-method">28. What is the use Function.prototype.call method?</a></li>
  <li><a href="#29-whats-the-difference-between-functionprototypeapply-and-functionprototypecall">29. What‚Äôs the difference between Function.prototype.apply and Function.prototype.call?</a></li>
  <li><a href="#30-what-is-the-usage-of-functionprototypebind">30. What is the usage of Function.prototype.bind?</a></li>
  <li><a href="#31-what-is-functional-programming-and-what-are-the-features-of-javascript-that-makes-it-a-candidate-as-a-functional-language">31. What is Functional Programming and what are the features of JavaScript that makes it a candidate as a functional language?</a></li>
  <li><a href="#33-why-are-functions-called-first-class-objects">33. Why are functions called First-class Objects?</a></li>
  <li><a href="#34-implement-the-arrayprototypemap-method-by-hand">34. Implement the Array.prototype.map method by hand.</a></li>
  <li><a href="#35-implement-the-arrayprototypefilter-method-by-hand">35. Implement the Array.prototype.filter method by hand.</a></li>
  <li><a href="#36-implement-the-arrayprototypereduce-method-by-hand">36. Implement the Array.prototype.reduce method by hand.</a></li>
  <li><a href="#37-what-is-the-arguments-object">37. What is the arguments object?</a></li>
  <li><a href="#38-how-to-create-an-object-without-a-prototype">38. How to create an object without a prototype?</a></li>
  <li><a href="#39-why-does-b-in-this-code-become-a-global-variable-when-you-call-this-function">39. Why does b in this code become a global variable when you call this function?</a></li>
  <li><a href="#40-what-is-ecmascript">40. What is ECMAScript?</a></li>
  <li><a href="#41-what-are-the-new-features-in-es6-or-ecmascript-2015">41. What are the new features in ES6 or ECMAScript 2015?</a></li>
  <li><a href="#42-whats-the-difference-between-var-let-and-const-keywords">42. What‚Äôs the difference between var, let and const keywords?</a></li>
  <li><a href="#43-what-are-arrow-functions">43. What are Arrow functions?</a></li>
  <li><a href="#44-what-are-classes">44. What are Classes?</a></li>
  <li><a href="#45-what-are-template-literals">45. What are Template Literals?</a></li>
  <li><a href="#46-what-is-object-destructuring">46. What is Object Destructuring?</a></li>
  <li><a href="#47-what-are-es6-modules">47. What are ES6 Modules?</a></li>
  <li><a href="#48-what-is-the-set-object-and-how-does-it-work">48. What is the Set object and how does it work?</a></li>
  <li><a href="#49-what-is-a-callback-function">49. What is a Callback function?</a></li>
  <li><a href="#50-what-are-promises">50. What are Promises?</a></li>
  <li><a href="#51-what-is-asyncawait-and-how-does-it-work">51. What is async/await and How does it work?</a></li>
  <li><a href="#52-whats-the-difference-between-spread-operator-and-rest-operator">52. What‚Äôs the difference between Spread operator and Rest operator?</a></li>
  <li><a href="#53-what-are-default-parameters">53. What are Default Parameters?</a></li>
  <li><a href="#54-what-are-wrapper-objects">54. What are Wrapper Objects?</a></li>
  <li><a href="#55-what-is-the-difference-between-implicit-and-explicit-coercion">55. What is the difference between Implicit and Explicit Coercion?</a></li>
  <li><a href="#56-what-is-nan-and-how-to-check-if-a-value-is-nan">56. What is NaN? and How to check if a value is NaN?</a></li>
  <li><a href="#57-how-to-check-if-a-value-is-an-array">57. How to check if a value is an Array?</a></li>
  <li><a href="#58-how-to-check-if-a-number-is-even-without-using-the--or-modulo-operator">58. How to check if a number is even without using the % or modulo operator?</a></li>
  <li><a href="#59-how-to-check-if-a-certain-property-exists-in-an-object">59. How to check if a certain property exists in an object?</a></li>
  <li><a href="#60-what-is-ajax">60. What is AJAX?</a></li>
  <li><a href="#61-what-are-the-ways-of-making-objects-in-javascript">61. What are the ways of making objects in JavaScript?</a></li>
  <li><a href="#62-whats-the-difference-between-objectseal-and-objectfreeze-methods">62. What‚Äôs the difference between Object.seal and Object.freeze methods?</a></li>
  <li><a href="#63-whats-the-difference-between-the-in-operator-and-the-hasownproperty-method-in-objects">63. What‚Äôs the difference between the in operator and the hasOwnProperty method in objects?</a></li>
  <li><a href="#64-what-are-the-ways-to-deal-with-asynchronous-code-in-javasscript">64. What are the ways to deal with Asynchronous Code in JavasScript?</a></li>
  <li><a href="#65-whats-the-difference-between-a-function-expression-and-function-declaration">65. What‚Äôs the difference between a function expression and function declaration?</a></li>
  <li><a href="#66-how-many-ways-can-a-function-be-invoked">66. How many ways can a function be invoked?</a></li>
  <li><a href="#67-what-is-memoization-and-whats-the-use-it">67. What is memoization and what‚Äôs the use it?</a></li>
  <li><a href="#68-implement-a-memoization-helper-function">68. Implement a memoization helper function.</a></li>
  <li><a href="#69-why-does-typeof-null-return-object-how-to-check-if-a-value-is-null">69. Why does typeof null return object? How to check if a value is null?</a></li>
  <li><a href="#70-what-does-the-new-keyword-do">70. What does the new keyword do?</a></li>
</ul>
:ET